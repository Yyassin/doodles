# This is a basic workflow to help you get started with Actions

name: node tests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: node test
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      TEST: 1

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "18.x"

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Cache firebase emulators
        uses: actions/cache@v3
        with:
          path: ~/.cache/firebase/emulators
          key: ${{ runner.os }}-firebase-${{ steps.cache-npm.outputs.firebase-tools }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('./node/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache mod dependencies
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
          ${{ runner.os }}-yarn-

      - name: Install Fastfire
        working-directory: ./mod/fastfire
        run: npm i --global yarn && yarn install --prefer-offline && yarn build

      - name: Install dependencies
        working-directory: ./node
        run: pnpm i --frozen-lockfile

      - name: Run linting
        working-directory: ./node
        run: pnpm run lint

      - name: Run test
        working-directory: ./node
        run: pnpm run emulator-test
